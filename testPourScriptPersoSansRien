import unittest
import pandas as pd
import os
from report_generator import generate_report
from stock_management import StockManagement
from main import main

class TestConsolidate_csvs(self):
    def setUp(self):
        self.test_dir = "test_csv_dir"
        self.output_file = "consolidated.csv"
        os.makedirs(self.test_dir, exist_ok=True)

        self.file1_content = "nom,quantite,prix_unitaire\nbanane,2,1.99\npomme,1,0.99\n"
        self.file2_content = "nom,quantite,prix_unitaire\ncarotte,5,0.99\ncourgette,3,2.99\n"
        self.file3_empty = ""
        self.file4_random = "id,toto,param\ncarotte,5,0.99\ncourgette,3,2.99\n"

        with open(os.path.join(self.test_dir, "file1.csv"), "w") as f1, \
                open(os.path.join(self.test_dir, "file2.csv"), "w") as f2, \
                open(os.path.join(self.test_dir, "file3.csv"), "w") as f3:
            f1.write(self.file1_content)
            f2.write(self.file2_content)
            f3.write(self.file3_empty)

    def tearDown(self):
        if os.path.exists(self.output_file):
            os.remove(self.output_file)
        for file in os.listdir(self.test_dir):
            os.remove(os.path.join(self.test_dir, file))
        os.rmdir(self.test_dir)

    def test_ok(self):
        pass;

    def test_empty_file(self):
        pass;

    def test_random_file(self):
        pass;

    def test_not_file(self):
        pass;

class TestSearch(unittest.TestCase):
    def setUp(self):
        # Mock CSV content
        self.csv_content = """nom,quantite,prix_unitaire
    pc,2,500.99
    ecran,1,100.99
    """
        # Create a temporary file for testing
        self.test_file = "test_search.csv"
        with open(self.test_file, "w") as file:
            file.write(self.csv_content)

    def tearDown(self):
        # Remove the temporary file after tests
        if os.path.exists(self.test_file):
            os.remove(self.test_file)

    def test_ok(self):
        pass

    def test_no_result(self):
        pass;

    def test_invalid_column(self):
        pass;

    def test_file_not_found(self):
        pass;

class TestGenerateReport(unittest.TestCase):
    def setUp(self):
        # Mock CSV content
        self.csv_content = """nom,quantite,prix_unitaire
    pc,2,500.99
    ecran,1,100.99
    """
        # Create a temporary file for testing
        self.test_file = "test_generateReport.csv"
        self.output_file = "test_report.csv"
        with open(self.test_file, "w") as file:
            file.write(self.csv_content)

    def tearDown(self):
        if os.path.exists(self.test_file):
            os.remove(self.test_file)
        if os.path.exists(self.output_file):
            os.remove(self.output_file)

    def test_ok(self):
        pass;

    def test_file_not_found(self):
        pass;


if __name__ == "__main__":
    unittest.main()
